description: >
  Install Mozilla's Firefox browser, for use in browser testing. Requires
  apt-get, gpg, curl, sha256sum, tar, jq

parameters:
  version:
    type: string
    default: latest
    description: >
      Version of Firefox to install, defaults to the latest stable release.
      To install an older release, specify a full semantic version number,
      ESR or otherwise, e.g., 66.0.3, 52.0.1esr, 53.0, etc. Note:
      version-selection is not supported for Alpine Linux-based execution
      environments, as Mozilla's Firefox binaries are not compiled to run on
      Alpine. Use the `alpine-version` parameter to select from a limited
      number of Alpine-based Firefox packages. Otherwise, for a full list of
      releases, see: https://archive.mozilla.org/pub/firefox/releases/

  alpine-version:
    type: enum
    default: stable
    enum: [stable, esr]
    description: >
      For Alpine Linux users, select a Firefox version: either the latest
      stable release, or the latest Extended Support Release. For more
      information, see https://mozilla.org/firefox/organizations and
      https://pkgs.alpinelinux.org/packages?name=firefox*

  install-dir:
    type: string
    default: /usr/local/bin
    description: >
      Directory in which to install Firefox

steps:
  - run:
      name: Install Firefox
      command: |
        if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
        echo "Sudo User detect"

        # FUNCTIONS
        grab_firefox_version () {
          if [[ "<<parameters.version>>" == "latest" ]]; then
            # extract latest version from mozilla product details API

            FIREFOX_VERSION_STRING=$(curl \
              https://product-details.mozilla.org/1.0/firefox_versions.json | \
              jq '.LATEST_FIREFOX_VERSION')

            # strip leading/trailing "
            temp="${FIREFOX_VERSION_STRING%\"}"
            FIREFOX_VERSION="${temp#\"}"
            echo "Latest stable version of Firefox is $FIREFOX_VERSION"
          else
            FIREFOX_VERSION="<<parameters.version>>"
            echo "Selected version of Firefox is $FIREFOX_VERSION"
          fi

          # create Firefox download URL base
          FIREFOX_URL_BASE="https://archive.mozilla.org/pub/firefox/releases/$FIREFOX_VERSION"
        }

        installation_check () {
          if command -v firefox > /dev/null 2>&1; then
            if firefox --version | grep "$FIREFOX_VERSION" > /dev/null 2>&1; then
              echo "firefox $FIREFOX_VERSION is already installed"
              exit 0
            else
              echo "A different version of Firefox is installed ($(firefox --version)); removing it"
              $SUDO rm -f $(command -v firefox)
            fi
          fi
        }

        # mac: setup version, install packages, then continue
        if uname -a | grep Darwin> /dev/null 2>&1; then
          echo "System detected as MacOS"
          grab_firefox_version
          installation_check

          HOMEBREW_NO_AUTO_UPDATE=1 brew install gnupg coreutils > /dev/null 2>&1

        # alpine: install everything, then check version & halt
        elif cat /etc/issue | grep Alpine > /dev/null 2>&1; then
          echo "System detected as Alpine"

          # https://stackoverflow.com/questions/51806403/installation-of-firefox-from-alpine-edge
          # https://wiki.alpinelinux.org/wiki/Include:Upgrading_to_Edge

          if ! command -v perl > /dev/null 2>&1; then
            echo "Installing Perl"
            apk add perl > /dev/null 2>&1
          fi

          perl -i -pe 's|v([0-9]+){0,1}(.[0-9]+){0,1}(.[0-9]+)|edge|g' \
            /etc/apk/repositories

          echo "Updating apt cache"
          apk upgrade --update-cache --available > /dev/null 2>&1

          apk add icu-libs > /dev/null 2>&1

          if [[ "<<parameters.alpine-version>>" == "stable" ]]; then
            FIREFOX_VERSION=$(curl \
              --silent --show-error --location --fail --retry 3 \
              http://dl-cdn.alpinelinux.org/alpine/edge/testing/x86_64/ | grep firefox | \
              sed -E 's%<a href="%%' | sed -E 's%.apk">firefox-.*.apk</a>.*%%' | \
              sed -E 's/firefox-//' | sed -E 's/-.*//')

            echo "Selected version of Firefox is: $FIREFOX_VERSION (Alpine APK)"

            apk --no-cache add \
              --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \
              firefox > /dev/null 2>&1

          elif [[ "<<parameters.alpine-version>>" == "esr" ]]; then
            FIREFOX_VERSION=$(curl \
              --silent --show-error --location --fail --retry 3 \
              http://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/ | grep firefox-esr | \
              sed -E 's|.*="||' | sed -E 's|.apk".*||' | \
              sed -E 's|firefox-esr-||' | sed -E 's|-.*||')

            echo "Selected version of Firefox is: $FIREFOX_VERSION (Mozilla Extended Support Release, Alpine APK)"

            apk --no-cache add \
              --repository http://dl-cdn.alpinelinux.org/alpine/edge/community \
              firefox-esr > /dev/null
          fi

          ln -s "$(which firefox)" "<<parameters.install-dir>>/firefox"

          # test/verify version
          if firefox --version | grep "$FIREFOX_VERSION" > /dev/null 2>&1; then
            echo "$(firefox --version) has been installed to $(which firefox)"
            exit 0
          else
            echo "Something went wrong; the specified version of Firefox could not be installed"
            exit 1
          fi

        # deb/ubuntu/other linux: setup version, install packages, then continue
        else
          echo "System detected as Linux"
          grab_firefox_version
          installation_check

          if command -v yum > /dev/null 2>&1; then
            $SUDO yum install -y \
              alsa-lib \
              bzip2 \
              dbus-glib-devel \
              gtk2-devel \
              gtk3-devel \
              libXt-devel \
              perl \
              which \
              > /dev/null 2>&1
          else
            $SUDO apt-get update > /dev/null 2>&1 && \
              $SUDO apt-get install -y libxt6 libgtk-3-dev libdbus-glib-1-2 > /dev/null 2>&1
          fi
        fi

        # import public key
        curl --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/KEY" | gpg --import > /dev/null 2>&1

        # download shasums
        curl -O --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/SHA256SUMS.asc" || curl -O --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/SHA512SUMS.asc"
        curl -O --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/SHA256SUMS" || curl -O --silent --show-error --location --fail --retry 3 "$FIREFOX_URL_BASE/SHA512SUMS"

        # verify shasums
        gpg --verify SHA256SUMS.asc SHA256SUMS || gpg --verify SHA512SUMS.asc SHA512SUMS
        rm -f SHA256SUMS.asc || rm -f SHA512SUMS.asc

        # setup firefox download
        if uname -a | grep Darwin > /dev/null 2>&1; then
          FIREFOX_FILE="Firefox%20$FIREFOX_VERSION"
          PLATFORM=mac
          FILE_EXT=dmg
        else
          FIREFOX_FILE="firefox-$FIREFOX_VERSION"
          PLATFORM=linux-x86_64
          FILE_EXT=tar.bz2
        fi

        FIREFOX_FILE_LOCATION="$PLATFORM/en-US/$FIREFOX_FILE"

        FIREFOX_FILE_NAME="$PLATFORM-en-US-$FIREFOX_FILE"

        # download firefox
        curl --silent --show-error --location --fail --retry 3 \
          --output "$FIREFOX_FILE_NAME.$FILE_EXT" \
          "$FIREFOX_URL_BASE/$FIREFOX_FILE_LOCATION.$FILE_EXT"

        if uname -a | grep Darwin > /dev/null 2>&1; then
          echo "No PGP data for macOS Firefox releases; skipping PGP verification"

          perl -i -pe "s&mac/en-US/Firefox $FIREFOX_VERSION&mac-en-US-Firefox%20$FIREFOX_VERSION&g" SHA256SUMS
          perl -i -pe "s&mac/en-US/Firefox $FIREFOX_VERSION&mac-en-US-Firefox%20$FIREFOX_VERSION&g" SHA512SUMS
        else
          # only do this step if .asc file exists for this version
          if [[ $(curl --silent --location --fail --retry 3 \
            "$FIREFOX_URL_BASE/$FIREFOX_FILE_LOCATION.$FILE_EXT.asc") ]]; then

            curl --silent --show-error --location --fail --retry 3 \
              --output "$FIREFOX_FILE_NAME.$FILE_EXT.asc" \
              "$FIREFOX_URL_BASE/$FIREFOX_FILE_LOCATION.$FILE_EXT.asc"

            # verify download archive
            gpg --verify "$FIREFOX_FILE_NAME.$FILE_EXT.asc" "$FIREFOX_FILE_NAME.$FILE_EXT"
            rm -f "$FIREFOX_FILE_NAME.$FILE_EXT.asc"
          fi

          perl -i -pe "s%linux-x86_64/en-US/firefox%linux-x86_64-en-US-firefox%g" SHA256SUMS
          perl -i -pe "s%linux-x86_64/en-US/firefox%linux-x86_64-en-US-firefox%g" SHA512SUMS
        fi

        grep "$FIREFOX_FILE_NAME.$FILE_EXT" SHA256SUMS | sha256sum -c - || \
          grep "$FIREFOX_FILE_NAME.$FILE_EXT" SHA512SUMS | sha512sum -c -
        rm -f SHA256SUMS || rm -f SHA512SUMS

        # setup firefox installation
        if uname -a | grep Darwin > /dev/null 2>&1; then
          hdiutil attach "$FIREFOX_FILE_NAME.$FILE_EXT" > /dev/null 2>&1
          $SUDO cp -R /Volumes/Firefox/Firefox.app /Applications

          hdiutil eject /Volumes/Firefox > /dev/null 2>&1
          $SUDO rm -f "$FIREFOX_FILE_NAME.$FILE_EXT"

          echo -e "#\!/bin/bash\n" > firefox
          perl -i -pe "s|#\\\|#|g" firefox
          echo -e "/Applications/Firefox.app/Contents/MacOS/firefox \"\$@\"" >> firefox

          $SUDO mv firefox <<parameters.install-dir>>
          $SUDO chmod +x <<parameters.install-dir>>/firefox

          # test/verify version
          if firefox --version | grep "$FIREFOX_VERSION" > /dev/null 2>&1; then
            echo "$(firefox --version) has been installed in the /Applications directory"
            echo "A shortcut has also been created at $(which firefox)"
          else
            echo "Something went wrong; the specified version of Firefox could not be installed"
            exit 1
          fi

        else
          $SUDO tar -xjf "$FIREFOX_FILE_NAME.$FILE_EXT"
          $SUDO rm -f "$FIREFOX_FILE_NAME.$FILE_EXT"
          $SUDO mv firefox "<<parameters.install-dir>>/firefox-$FIREFOX_VERSION"
          $SUDO chmod +x "<<parameters.install-dir>>/firefox-$FIREFOX_VERSION/firefox"
          $SUDO ln -s "<<parameters.install-dir>>/firefox-$FIREFOX_VERSION/firefox" /usr/local/bin/firefox

          # test/verify version
          if echo "$(firefox --version)esr" | grep "$FIREFOX_VERSION" > /dev/null 2>&1; then
            echo "$(firefox --version) has been installed to $(which firefox)"
          else
            echo "Something went wrong; the specified version of Firefox could not be installed"
            exit 1
          fi
        fi
